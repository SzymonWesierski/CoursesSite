security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                success_handler: App\Security\LoginSuccessHandler
            logout:
                path: app_logout
                target: courses

            remember_me:
                secret:   '%kernel.secret%' # required
                lifetime: 604800 # 1 week in seconds

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #User
         - { path: '^/courses/create', roles: ROLE_USER }
         - { path: '^/courses/edit', roles: ROLE_USER }
         - { path: '^/courses/delete', roles: ROLE_USER }
         - { path: '^/episodes', roles: ROLE_USER }
         - { path: '^/MyCoursesPanel', roles: ROLE_USER } 
         - { path: '^/cart', roles: ROLE_USER }
         - { path: '^/checkout', roles: ROLE_USER }
         - { path: '^/editProfile', roles: ROLE_USER }

         #Admin
         - { path: '^/adminPanel', roles: ROLE_ADMIN }
         - { path: '^/categories', roles: ROLE_ADMIN }
         - { path: '^/users', roles: ROLE_ADMIN }
         - { path: '^/statistics', roles: ROLE_ADMIN }
         - { path: '^/reports', roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
